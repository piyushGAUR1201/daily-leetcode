class Solution {
public:
    int minimumPushes(string word) {
    unordered_map<char, int> frequency;
    for (char ch : word) {
        frequency[ch]++;
    }
    int sum =0;
    vector<int> freq;   
    for (auto& i  : frequency) {
        freq.push_back(i.second);
        if(frequency.find(i.first)!= frequency.end()){
            sum++;
        }
    }
    if(sum<=8) return word.length();
    sort(freq.rbegin(), freq.rend());
    int totalPresses = 0;
    int keyPressCount = 1;
    int charsAssigned = 0; 
    for (auto& i : freq) {
        totalPresses += i * keyPressCount;
        charsAssigned++;
        if (charsAssigned % 8 == 0) {
            keyPressCount++;
        }
    }

    return totalPresses;
    }
};
