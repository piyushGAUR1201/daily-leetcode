// beginner nested loop approach:

class Solution {
    public int[] finalPrices(int[] prices) {
        for(int i =0;i<prices.length;i++){
            for(int j =i+1;j<prices.length;j++){
                if(prices[j]<=prices[i]){
                    prices[i]-=prices[j];
                    break;
                }
            }
        }
        return prices;
    }
}

// Using Monotonic Stack:
class Solution {
    public int[] finalPrices(int[] prices) {
        Stack<Integer> st = new Stack<>();
        for(int i =prices.length-1;i>=0;i--){
            while(!st.isEmpty() && st.peek()> prices[i]){
                st.pop();
            }
            int discount =0;
            if(!st.isEmpty()) discount = st.peek();
            st.push(prices[i]);
            prices[i]-=discount;
        }
        return prices;
    }
}
