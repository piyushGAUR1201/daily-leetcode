class Solution {
    public int minimizedMaximum(int n, int[] quantities) {
        int m  = quantities.length;
        int l = 1;
        int r = 0;
        for (int quantity : quantities) {
            r = Math.max(r, quantity);
        }

        int result = r;
        while(l<=r){
            int mid = l+ (r-l)/2; // suppposedly x 
            if(possible(mid, quantities, n )){
                result = mid;
                r = mid-1;
            }
            else l = mid+1;
        }
        return result;
    }
    static boolean possible(int x, int[] quantities, int shop ){
        for(int product : quantities){
            shop-=(product+x-1)/x;
            if(shop<0) return false;
        }
        return true;

    }
}
